{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\DH\\\\FE3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { reducer } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  list: [],\n  favs: [],\n  theme: true\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const valor = true;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useCharContext = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useCharContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useReducer","reducer","initialState","list","favs","theme","ContextGlobal","undefined","ContextProvider","children","valor","state","dispatch","url","useCharContext"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/DH/FE3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useReducer } from \"react\";\r\nimport { reducer } from './reducer';\r\n\r\nexport const initialState = {\r\n  list: [],\r\n  favs: [],\r\n  theme: true\r\n}\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const valor = true;\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{state, dispatch}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n\r\nexport const useCharContext = () => useContext(ContextGlobal);"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,UAAzD,QAA2E,OAA3E;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,IAAI,EAAE,EADoB;EAE1BC,IAAI,EAAE,EAFoB;EAG1BC,KAAK,EAAE;AAHmB,CAArB;AAKP,OAAO,MAAMC,aAAa,gBAAGV,aAAa,CAACW,SAAD,CAAnC;AAGP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAMC,KAAK,GAAG,IAAd;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACC,OAAD,EAAUC,YAAV,CAApC;EAEA,MAAMW,GAAG,GAAG,4CAAZ;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACF,KAAD;MAAQC;IAAR,CAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAdM;;GAAMD,e;;KAAAA,e;AAgBb,eAAeA,eAAf;AAEA,OAAO,MAAMM,cAAc,GAAG;EAAA;;EAAA,OAAMjB,UAAU,CAACS,aAAD,CAAhB;AAAA,CAAvB;;IAAMQ,c"},"metadata":{},"sourceType":"module"}